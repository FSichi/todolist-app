{"version":3,"sources":["components/TodoListItem.js","components/TodoList.js","components/TodoAdd.js","hooks/useForm.js","hooks/todoReducer.js","TodoApp.js","index.js"],"names":["TodoListItem","todo","index","handleDelete","handleToggle","className","done","onClick","id","desc","TodoList","todos","map","TodoAdd","handleAddTodo","initialState","useState","values","setValues","handleInputChange","target","name","value","useForm","description","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","type","placeholder","autoComplete","onChange","todoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8999ca16.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const TodoListItem = ( {todo, index, handleDelete, handleToggle} ) => {\r\n\r\n\r\n    return (\r\n        <li\r\n            key= {todo.id}\r\n            className= 'list-group-item'\r\n        >\r\n\r\n            <p \r\n                className= { `${todo.done && 'complete'}` } \r\n                onClick= { () => { handleToggle(todo.id) }}\r\n            >\r\n                {index + 1} - {todo.desc}\r\n            </p>\r\n\r\n            <button \r\n                className= 'btn btn-danger'\r\n                onClick={() => {\r\n                    handleDelete(todo.id);\r\n                }}\r\n            >\r\n                Borrar\r\n            </button>\r\n\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem'\r\n\r\nexport const TodoList = ( {todos, handleDelete, handleToggle} ) => {\r\n\r\n    return (\r\n\r\n        <ul className= 'list-group list-group-flush'>\r\n\r\n            {\r\n                todos.map( (todo, index) => (\r\n\r\n                    <TodoListItem \r\n                        key={todo.id}\r\n                        todo={todo}\r\n                        index={index}\r\n                        handleDelete={handleDelete}\r\n                        handleToggle={handleToggle}\r\n                    /> \r\n                ))\r\n            }\r\n\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const TodoAdd = ({ handleAddTodo  }) => {\r\n\r\n    const [ {description}, handleInputChange, reset ] = useForm({\r\n        description: '',\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(description.trim().length <= 0){\r\n            return ;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        }\r\n\r\n        handleAddTodo(newTodo);\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4>Agregar Tarea</h4>\r\n            <hr />\r\n            \r\n            <form onSubmit= {handleSubmit}>\r\n\r\n                <input \r\n                    type = 'text'\r\n                    name= 'description'\r\n                    className = 'form-control'\r\n                    placeholder= 'Quiero Hacer...'\r\n                    value = {description}\r\n                    autoComplete = 'off'\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type = 'submit'\r\n                    className = 'btn btn-outline-primary mt-1 w-100'\r\n                >\r\n                    Agregar\r\n                </button>\r\n\r\n\r\n            </form>   \r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}\r\n","\r\nexport const todoReducer = (state = [], action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'add':\r\n\r\n            return [ ...state, action.payload ];\r\n\r\n        case 'delete':\r\n\r\n            return state.filter( todo => todo.id !== action.payload );\r\n\r\n        case 'toggle':\r\n\r\n            return state.map( todo => (\r\n                (todo.id === action.payload) \r\n                ? {...todo, done: !todo.done} \r\n                : todo\r\n            ));\r\n\r\n            // return state.map( todo =>  {\r\n            //     if(todo.id === action.payload){\r\n            //         return{\r\n            //             ...todo,\r\n            //             done:!todo.done\r\n            //         }\r\n            //     }\r\n            //     else{\r\n            //         return todo;\r\n            //     }\r\n            // });\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React, { useEffect, useReducer } from 'react'\r\nimport { TodoList } from './components/TodoList';\r\nimport { TodoAdd } from './components/TodoAdd';\r\nimport { todoReducer } from './hooks/todoReducer'\r\nimport './TodoApp.css'\r\n\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('todos')) || [] ;\r\n}\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const [ todos, dispatch ] = useReducer(todoReducer, [], init);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify( todos ));\r\n    }, [todos]);\r\n\r\n\r\n    const handleAddTodo = (newTodo) => {\r\n\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo\r\n        });\r\n        \r\n    }\r\n    \r\n    const handleDelete = (todoId) => {\r\n\r\n        const actionDeleteTodo = {\r\n            type: 'delete',\r\n            payload: todoId\r\n        }\r\n\r\n        dispatch(actionDeleteTodo);\r\n    }   \r\n\r\n    const handleToggle = (todoId) => {\r\n        \r\n        dispatch({\r\n            type: 'toggle',\r\n            payload: todoId\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1>TODO APP ({todos.length})</h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className = 'col-7'>\r\n\r\n                    <TodoList \r\n                        todos={todos}\r\n                        handleDelete={handleDelete}\r\n                        handleToggle={handleToggle}\r\n                    />\r\n                    \r\n                </div>\r\n\r\n                <div className= 'col-5'>\r\n\r\n                    <TodoAdd \r\n                        handleAddTodo ={handleAddTodo}\r\n                    />\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { TodoApp } from './TodoApp';\r\n\r\nReactDOM.render(\r\n    <TodoApp />,\r\n    document.getElementById('root')\r\n  );"],"sourceRoot":""}